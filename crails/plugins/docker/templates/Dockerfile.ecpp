using namespace std;

string @image = "debian:sid";
bool   @include_assets = true;
bool   @with_comet = false;
bool   @with_odb = false;
string @cheerp_repository = "cheerp-nightly-ppa/ubuntu focal main";
// END LINKING
FROM <%= image %>

WORKDIR /tmp
ENV LD_LIBRARY_PATH /usr/local/lib

RUN apt-get -y --allow-unauthenticated update && \
    apt-get -y --allow-unauthenticated upgrade && \
    apt-get -y install curl \
  cmake \
  pkg-config \
  build-essential \
  libbz2-dev \
  libssl-dev \
  git

RUN apt-get -y install \
  libboost1.74-dev \
  libboost-filesystem1.74-dev \
  libboost-random1.74-dev \
  libboost-program-options1.74-dev \
  libboost-thread1.74-dev \
  libboost-random1.74-dev \
  libboost-system1.74-dev

COPY build-build2.sh build-build2.sh
RUN bash build-build2.sh

<% if (include_assets) do %>
RUN apt-get install -y nodejs npm
RUN npm install -g node-sass
<% end %>

<% if (with_odb) do %>
RUN apt-get -y install libpq-dev libsqlite3-dev libmysqlclient-dev
COPY build-odb-compiler.sh build-odb-compiler.sh
RUN bash build-odb-compiler.sh
<% end %>

<% if (with_comet) do %>
RUN echo "deb http://ppa.launchpad.net/leaningtech-dev/<%= cheerp_repository %>" >> /etc/apt/sources.list
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 84540D4B9BF457D5
RUN apt-get -y --allow-unauthenticated update
RUN apt-get -y install cheerp-core
<% end %>

COPY build-environment.sh build-environment.sh
COPY build-crails.sh build-crails.sh
RUN bash build-crails.sh
<% if (with_comet) do %>
COPY build-comet.sh build-comet.sh
RUN bash build-comet.sh
<% end %>

RUN mkdir -p /opt/webapp
WORKDIR /opt/webapp
