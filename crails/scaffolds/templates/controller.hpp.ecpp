using namespace std;

string @classname;
string @parent_class      = "ApplicationController";
string @parent_header     = "app/controllers/application.hpp";
string @model_class       = "";
string @model_header      = "";
string @id_type           = "";
string @database_backend  = "";
bool   @resource_scaffold = false;
bool   @crud_scaffold     = false;
// END LINKING
#pragma once
#include "<%= parent_header %>"
<% if (model_class.length() > 0) do %>
#include "<%= model_header %>"
<% if (database_backend == "odb") do %>
#include <crails/odb/controller.hpp>
<% end else if (database_backend == "mongodb") do %>
#include <crails/mongodb/controller.hpp>
<% end %>

class <%= model_class %>;
<% end %>

class <%= classname %> : public <%= parent_class %>
{
public:
  <%= classname %>(Crails::Context&);

  void initialize() override;
  void finalize() override;
<% if (resource_scaffold || crud_scaffold) do -%>
  void index();
  void show();
  void create();
  void update();
  void destroy();
<% if (resource_scaffold) do -%>
  void new_();
  void edit();
<% end -%>
<% end -%>

protected:
<% if (model_class.length() > 0) do %>
  std::shared_ptr<<%= model_class %>> find_model(<%= id_type %> id);
  void require_model(<%= id_type %> id);
  void find_list();

  std::shared_ptr<<%= model_class %>> model;
  std::vector<<%= model_class %>> model_list;
<% end %>
};
