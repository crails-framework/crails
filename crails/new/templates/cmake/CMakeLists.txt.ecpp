#include <algorithm>
#include <list>

std::string @crails_version;
std::string @project_name;
std::string @configuration_type = "full";
std::string @cpp_version = "c++17";
std::list<std::string>& @formats;
std::list<std::string>& @plugins;

// END LINKING
cmake_minimum_required(VERSION 3.5)

project(<%= project_name %>)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=<%= cpp_version %> -Wall -Wno-unknown-pragmas -Wno-deprecated-declarations -pedantic")
SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)

find_package(PkgConfig)
pkg_check_modules(CRAILS REQUIRED<% for (auto plugin : plugins) do %> <%= plugin %>>=<%= crails_version %><% end %>)
pkg_check_modules(CRAILS_TESTS QUIET libcrails-tests>=<%= crails_version%>)
pkg_check_modules(CRAILS_TESTS_SELENIUM QUIET libcrails-selenium>=<%= crails_version %>)

include_directories(/usr/local/include ${CRAILS_INCLUDE_DIRS} . ./app)
list(APPEND CMAKE_INSTALL_RPATH "$ORIGIN")
list(APPEND CMAKE_INSTALL_RPATH ${CRAILS_LIBRARY_DIRS})

file(GLOB server_files exe/server/*.cpp)
file(GLOB_RECURSE crails_app app/*.cpp app/*.cxx)

add_library(crails-app SHARED ${crails_app})
add_executable(server ${server_files})

set(dependencies crails-app
                 ${CRAILS_LINK_LIBRARIES}
                 pthread dl crypto ssl)
# Custom dependencies (do not modify this line)

target_link_libraries(server ${dependencies})

if (CRAILS_TESTS_FOUND)
  add_subdirectory(spec/driver)
endif()
