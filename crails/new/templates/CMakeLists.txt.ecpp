#include <algorithm>
#include <list>

std::string @crails_version;
std::string @project_name;
std::string @configuration_type = "full";
std::list<std::string>& @formats;
std::list<std::string>& @modules;

// END LINKING
cmake_minimum_required(VERSION 3.0)

project(<%= project_name %>)

set(CMAKE_CXX_FLAGS "-std=c++17 -Wall -Wno-unknown-pragmas -Wno-deprecated-declarations -pedantic ")

find_package(PkgConfig)
find_package(Boost COMPONENTS thread filesystem program_options system random REQUIRED)
pkg_check_modules(CRAILS REQUIRED<% for (auto module_ : modules) do %> <%= module_ %><=<%= crails_version %><% end %>)

include_directories(/usr/local/include ${Boost_INCLUDE_DIRS} ${CRAILS_INCLUDE_DIRS} .)

file(GLOB_RECURSE server_files app/main.cpp)
file(GLOB_RECURSE tests_files  spec/*.cpp)
file(GLOB_RECURSE crails_app
  app/controllers/*.cpp
  app/controllers/*.cxx
  app/models/*.cpp
  app/models/*.cxx
  app/views/*.cpp
  app/views/*.cxx
  app/routes.cpp
  config/*.cpp
  lib/*.cpp
  lib/*.cxx
  modules/*.cpp
  modules/*.cxx)

add_library(crails-app SHARED ${crails_app})
add_executable(server ${server_files})
add_executable(tests  ${tests_files})

set(dependencies libcrails
                 ${CRAILS_LINK_LIBRARIES}
                 ${Boost_LIBRARIES}
                 pthread dl crypto ssl)

target_link_libraries(server ${dependencies})
target_link_libraries(tests  libcrails-tests ${dependencies} ${tests_dependencies})
