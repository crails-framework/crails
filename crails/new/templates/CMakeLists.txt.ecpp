#include <algorithm>
#include <list>

std::string @crails_version;
std::string @project_name;
std::string @configuration_type = "full";
std::string @cpp_version = "c++17";
std::list<std::string>& @formats;
std::list<std::string>& @plugins;

// END LINKING
cmake_minimum_required(VERSION 3.0)

project(<%= project_name %>)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=<%= cpp_version %> -Wall -Wno-unknown-pragmas -Wno-deprecated-declarations -pedantic")

find_package(PkgConfig)
find_package(Boost COMPONENTS thread program_options random REQUIRED)
pkg_check_modules(CRAILS REQUIRED<% for (auto plugin : plugins) do %> <%= plugin %>>=<%= crails_version %><% end %>)
pkg_check_modules(CRAILS_TESTS QUIET libcrails-tests>=<%= crails_version%>)
pkg_check_modules(CRAILS_TESTS_SELENIUM QUIET libcrails-selenium>=<%= crails_version %>)

include_directories(/usr/local/include ${Boost_INCLUDE_DIRS} ${CRAILS_INCLUDE_DIRS} .)

file(GLOB server_files app/main.cpp)
file(GLOB_RECURSE crails_app
  app/routes.cpp
  app/controllers/*.cpp app/controllers/*.cxx
  app/models/*.cpp      app/models/*.cxx
  app/views/*.cpp       app/views/*.cxx
  modules/*.cpp         modules/*.cxx
  config/*.cpp          config/*.cxx
  lib/*.cpp             lib/*.cxx)
list(FILTER crails_app EXCLUDE REGEX "app/client/.*")

add_library(crails-app SHARED ${crails_app})
add_executable(server ${server_files})

set(dependencies crails-app
                 ${CRAILS_LINK_LIBRARIES}
                 ${Boost_LIBRARIES}
                 pthread dl crypto ssl)
# Custom dependencies (do not modify this line)

target_link_libraries(server ${dependencies})

if (CRAILS_TESTS_FOUND)
  file(GLOB_RECURSE tests_files  spec/*.cpp)
  add_executable(tests ${tests_files})
  if (CRAILS_TESTS_SELENIUM_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DTESTS_WITH_SELENIUM")
  endif()
  target_link_libraries(tests crails-app ${CRAILS_TESTS_LIBRARIES} ${CRAILS_TESTS_SELENIUM_LIBRARIES} ${dependencies} ${tests_dependencies})
endif()
